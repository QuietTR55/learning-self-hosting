// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package database

import (
	"context"
)

const createMessage = `-- name: CreateMessage :exec
INSERT INTO messages (content)
VALUES ($1)
`

func (q *Queries) CreateMessage(ctx context.Context, content string) error {
	_, err := q.db.Exec(ctx, createMessage, content)
	return err
}

const getRecentMessages = `-- name: GetRecentMessages :many
SELECT id, content, created_at
FROM messages
ORDER BY created_at DESC
LIMIT 50
`

func (q *Queries) GetRecentMessages(ctx context.Context) ([]Message, error) {
	rows, err := q.db.Query(ctx, getRecentMessages)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Message
	for rows.Next() {
		var i Message
		if err := rows.Scan(&i.ID, &i.Content, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
